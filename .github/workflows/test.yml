name: Build Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/test.yml'
      - 'LICENSE'
      - '**/README.md'
      - '.gitignore'
      - '.gitattributes'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/test.yml'
      - 'LICENSE'
      - '**/README.md'
      - '.gitignore'
      - '.gitattributes'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  check-stable:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: cargo check --workspace --all-features --verbose

  clippy-stable:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: cargo clippy --workspace --all-features --verbose

  test-stable:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: cargo test --workspace --all-features --verbose

  check-nightly:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - run: cargo check --workspace --all-features --verbose

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt --all --check
